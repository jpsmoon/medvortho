/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["resources_js_diagnosiscodes_js"],{

/***/ "./resources/js/diagnosiscodes.js":
/*!****************************************!*\
  !*** ./resources/js/diagnosiscodes.js ***!
  \****************************************/
/***/ (() => {

eval("alert(' for testing ');\nvar addModal = document.getElementById(\"addModal\");\nvar editModal = document.getElementById(\"editModal\");\nvar btn = document.getElementById(\"myBtn\");\nvar span = document.getElementsByClassName(\"close\")[0];\n\nfunction show_addmodal() {\n  addModal.style.display = \"block\";\n}\n\nfunction show_editmodal() {\n  editModal.style.display = \"block\";\n}\n\nfunction hide_modal() {\n  addModal.style.display = \"none\";\n  editModal.style.display = \"none\";\n}\n\n$('#SubmitForm').on('submit', function (e) {\n  e.preventDefault();\n  var diagnosis_name = $('#diagnosis_name').val();\n  var diagnosis_code = $('#diagnosis_code').val();\n  var _url = 'diagnosiscodes'; //$('#SubmitForm').attr('action');\n\n  var _token = $('meta[name=\"csrf-token\"]').attr('content');\n\n  $.ajax({\n    url: _url,\n    method: \"POST\",\n    data: {\n      diagnosis_name: diagnosis_name,\n      diagnosis_code: diagnosis_code,\n      _token: _token //\"{{ csrf_token() }}\"\n\n    },\n    success: function success(data) {\n      //console.log(data);\n      todo = data.records;\n      $('table tbody').append(\"\\n                        <tr id=\\\"todo_\".concat(todo.id, \"\\\">\\n                            <td>\").concat(todo.id, \"</td>\\n                            <td>\").concat(todo.diagnosis_name, \"</td>\\n                            <td>\").concat(todo.diagnosis_code, \"</td>\\n                            <td>Active</td>\\n                            <td>\\n                                <a data-id=\\\"\").concat(todo.id, \"\\\" onclick=\\\"editTodo(\").concat(todo.id, \")\\\" class=\\\"btn btn-primary\\\">Edit</a>\\n                                <a data-id=\\\"\").concat(todo.id, \"\\\" class=\\\"btn btn-danger\\\" onclick=\\\"deleteTodo(\").concat(todo.id, \")\\\">Delete</a>\\n                            </td>\\n                        </tr>\\n                    \")); //alert(data.message);\n\n      $('#diagnosis_name').val('');\n      $('#diagnosis_code').val('');\n      hide_modal();\n    },\n    error: function error(response) {\n      console.log(response);\n      alert(response.responseJSON.message); // $('#taskError').text(response.responseJSON.errors.todo);\n    }\n  });\n});\n\nfunction editTodo(id) {\n  var name = $(\"#todo_\" + id + \" td:nth-child(2)\").html();\n  var code = $(\"#todo_\" + id + \" td:nth-child(3)\").html();\n  $(\"#diagnosis_code_id\").val(id);\n  $(\"#editdiagnosis_name\").val(name);\n  $(\"#editdiagnosis_code\").val(code);\n  show_editmodal();\n}\n\nfunction updateTodo() {\n  var diagnosis_name = $('#editdiagnosis_name').val();\n  var diagnosis_code = $('#editdiagnosis_code').val();\n  var id = $('#diagnosis_code_id').val();\n\n  var _url = \"/diagnosiscodes/\".concat(id);\n\n  var _token = $('meta[name=\"csrf-token\"]').attr('content');\n\n  $.ajax({\n    url: _url,\n    type: \"PUT\",\n    data: {\n      diagnosis_name: diagnosis_name,\n      diagnosis_code: diagnosis_code,\n      _token: _token\n    },\n    success: function success(data) {\n      console.log(data);\n      todo = data.records;\n      $(\"#todo_\" + id + \" td:nth-child(2)\").html(todo.diagnosis_name);\n      $(\"#todo_\" + id + \" td:nth-child(3)\").html(todo.diagnosis_code);\n      $('#diagnosis_code_id').val('');\n      $('#editdiagnosis_name').val('');\n      $('#editdiagnosis_code').val(''); //alert(data.message); \n\n      hide_modal();\n    },\n    error: function error(response) {\n      console.log(response);\n      alert(response.responseJSON.message); //$('#taskError').text(response.responseJSON.errors.todo);\n    }\n  });\n}\n\nfunction deleteTodo(id) {\n  var _url = \"/diagnosiscodes/\".concat(id);\n\n  if (confirm(\"Are You sure ?\" + _url)) {\n    var token = $('meta[name=\"csrf-token\"]').attr('content');\n    $.ajax({\n      url: _url,\n      type: 'DELETE',\n      data: {\n        _token: token\n      },\n      success: function success(response) {\n        console.log(response); //$(\"#todo_\"+id).remove();\n        //alert(response.message);\n\n        $(\"#todo_\" + id + \" td:nth-child(4)\").html('Block');\n        $(\"#todo_\" + id + \" td:nth-child(5)\").html(\"<a data-id=\\\"\".concat(id, \"\\\" class=\\\"btn btn-success\\\" onclick=\\\"restoreTodo(\").concat(id, \")\\\">Restore</a>\"));\n      },\n      error: function error(response) {\n        alert(response.responseJSON.message);\n      }\n    });\n  }\n}\n\nfunction restoreTodo(id) {\n  var _url = \"/diagnosiscodes/restore/\".concat(id);\n\n  if (confirm(\"Are You sure ?\" + _url)) {\n    var token = $('meta[name=\"csrf-token\"]').attr('content');\n    $.ajax({\n      url: _url,\n      type: 'POST',\n      data: {\n        _token: token\n      },\n      success: function success(response) {\n        console.log(response);\n        $(\"#todo_\" + id + \" td:nth-child(4)\").html('Active');\n        $(\"#todo_\" + id + \" td:nth-child(5)\").html(\"<a data-id=\\\"\".concat(id, \"\\\" onclick=\\\"editTodo(\").concat(id, \")\\\" class=\\\"btn btn-primary\\\">Edit</a>\\n                <a data-id=\\\"\").concat(id, \"\\\" class=\\\"btn btn-danger\\\" onclick=\\\"deleteTodo(\").concat(id, \")\\\">Delete</a>\"));\n      },\n      error: function error(response) {\n        alert(response.responseJSON.message);\n      }\n    });\n  }\n}\n\nalert('EOF'); // export{show_addmodal};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/diagnosiscodes.js\n");

/***/ })

}]);